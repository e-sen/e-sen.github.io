<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>关于时间复杂度</title>
    <link href="/2022/02/11/%E5%85%B3%E4%BA%8E%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6/"/>
    <url>/2022/02/11/%E5%85%B3%E4%BA%8E%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6/</url>
    
    <content type="html"><![CDATA[<p>天道有轮回，苍天绕过谁~！(曾经偷过的懒，终究都要偿还的！)</p><p>这次来偿还 <strong>时间复杂度</strong> 的债了</p><h2 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度"></a>时间复杂度</h2><p>先说结论(咳咳，抛开数据量来说复杂度也是扯淡)</p><div class="code-wrapper"><pre><code class="hljs">O(1) &lt; O(logn) &lt; O(n) &lt; O(nlogn) &lt; O(n²) &lt; O(2^n)</code></pre></div><p><img src="/../images/%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6.png" alt="时间复杂度"></p><table><thead><tr><th align="center">类型</th><th align="center">意义</th><th align="center">举例</th></tr></thead><tbody><tr><td align="center">O(1)</td><td align="center">最低复杂度，常量值，也是耗时，耗空间与输入数据大小无关，无论输入数据增大多少倍，耗时&#x2F;耗空间都不变</td><td align="center">哈希算法就是典型的O(1)时间复杂度，无论数据规模多大，都可以在一次计算后找到目标（不考虑冲突的话）</td></tr><tr><td align="center">0(n)</td><td align="center">数据量增大几倍，耗时也增大几倍</td><td align="center">遍历算法</td></tr><tr><td align="center">O(logn)</td><td align="center">当数据增大n倍时，耗时增大logn倍(这里的log是以2为底的，比如说，当数据增大256倍时，耗时只增大8倍)</td><td align="center">二分查找就是O(logn)的算法，每找一次排除一半的可能，256个数据中查找只要找8次就可以找到目标</td></tr><tr><td align="center">O(n²)</td><td align="center">对n个数排序，需要扫描n*n次</td><td align="center">冒泡排序</td></tr><tr><td align="center">O(nlogn)</td><td align="center">就是n乘以logn，当数据增大256倍时，耗时增大256*8&#x3D;2048倍。这个复杂度高于O(n)低于O(n²)。</td><td align="center">归并排序就是O(nlogn)的时间复杂度。</td></tr></tbody></table><h2 id="常见排序的时间复杂度"><a href="#常见排序的时间复杂度" class="headerlink" title="常见排序的时间复杂度"></a>常见排序的时间复杂度</h2><div class="code-wrapper"><pre><code class="hljs">稳定性表示，排序后两个相等的键值的顺序和排序之前的顺序相同</code></pre></div><table><thead><tr><th align="center">排序算法</th><th align="center">平均复杂度</th><th align="center">最好情况</th><th align="center">最坏情况</th><th align="center">空间复杂度</th><th align="center">排序方式</th><th align="center">稳定性</th></tr></thead><tbody><tr><td align="center">冒泡排序</td><td align="center">O(n²)</td><td align="center">O(n)</td><td align="center">O(n²)</td><td align="center">O(1)</td><td align="center">In-place</td><td align="center">稳定</td></tr><tr><td align="center">选择排序</td><td align="center">O(n²)</td><td align="center">O(n²)</td><td align="center">O(n²)</td><td align="center">O(1)</td><td align="center">In-place</td><td align="center">不稳定</td></tr><tr><td align="center">插入排序</td><td align="center">O(n²)</td><td align="center">O(n)</td><td align="center">O(n²)</td><td align="center">O(1)</td><td align="center">In-place</td><td align="center">稳定</td></tr><tr><td align="center">希尔排序</td><td align="center">O(nlogn)</td><td align="center">O(nlog²n)</td><td align="center">O(nlog²n)</td><td align="center">O(1)</td><td align="center">In-place</td><td align="center">不稳定</td></tr><tr><td align="center">归并排序</td><td align="center">O(nlogn)</td><td align="center">O(nlogn)</td><td align="center">O(nlogn)</td><td align="center">O(n)</td><td align="center">Out-place</td><td align="center">稳定</td></tr><tr><td align="center">快速排序</td><td align="center">O(nlogn)</td><td align="center">O(nlogn)</td><td align="center">O(n²)</td><td align="center">O(logn)</td><td align="center">In-place</td><td align="center">不稳定</td></tr><tr><td align="center">堆排序</td><td align="center">O(nlogn)</td><td align="center">O(nlogn)</td><td align="center">O(nlogn)</td><td align="center">O(1)</td><td align="center">In-place</td><td align="center">不稳定</td></tr><tr><td align="center">计数排序</td><td align="center">O(n+k)</td><td align="center">O(n+k)</td><td align="center">O(n+k)</td><td align="center">O(k)</td><td align="center">Out-place</td><td align="center">稳定</td></tr><tr><td align="center">桶排序</td><td align="center">O(n+k)</td><td align="center">O(n+k)</td><td align="center">O(n²)</td><td align="center">O(n+k)</td><td align="center">Out-place</td><td align="center">稳定</td></tr><tr><td align="center">基数排序</td><td align="center">O(n*k)</td><td align="center">O(n*k)</td><td align="center">O(n*k)</td><td align="center">O(n+k)</td><td align="center">Out-place</td><td align="center">稳定</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>优化</tag>
      
      <tag>数组</tag>
      
      <tag>时间复杂度</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
